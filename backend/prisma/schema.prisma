generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  role      Role
  name      String?  
  createdAt DateTime @default(now())

  StudentProfile Student?  
  StartupProfile Startup?  
}

model Student {
  id                   String   @id @default(uuid())
  userId               String   @unique
  user                 User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  yearOfStudy          Int      @default(1)
  degree               String   @default("Undeclared")
  skills               String[] @default([])
  tools                String[] @default([])
  priorExperience      Boolean  @default(false)
  learningNewSkills    Boolean  @default(false)
  preferredIndustries  String[] @default([])
  interestedRoles      String[] @default([])
  committedHours       String   @default("0")
  internshipType       String? 
  workPreference       String   @default("None")
  softSkill            String? 
  softSkillDescription String?
  location             String   @default("Unknown")
  startDate            DateTime @default(now())
}


model Startup {
  id           String   @id @default(uuid())
  userId       String   @unique
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  companyName  String   
  website      String?
  foundedYear  Int
  internships  Internship[]
}

model Internship {
  id                String   @id @default(uuid())
  title             String
  description       String
  internshipType    String
  duration          String
  workPreference    String
  skillsRequired    String
  preferredIndustry String
  location          String
  startDate         DateTime
  salary            String?   
  company           String?   
  startupId         String
  createdAt         DateTime @default(now())
  toolsRequired     String? 

  startup           Startup  @relation(fields: [startupId], references: [id], onDelete: Cascade)
}


enum Role {
  STUDENT
  STARTUP
}
